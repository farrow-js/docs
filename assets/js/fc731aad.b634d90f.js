"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4630],{3905:function(e,a,r){r.d(a,{Zo:function(){return c},kt:function(){return d}});var t=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function p(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=t.createContext({}),s=function(e){var a=t.useContext(l),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},c=function(e){var a=s(e.components);return t.createElement(l.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(r),d=n,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return r?t.createElement(f,i(i({ref:a},c),{},{components:r})):t.createElement(f,i({ref:a},c))}));function d(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var l in a)hasOwnProperty.call(a,l)&&(p[l]=a[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var s=2;s<o;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8215:function(e,a,r){var t=r(7294);a.Z=function(e){var a=e.children,r=e.hidden,n=e.className;return t.createElement("div",{role:"tabpanel",hidden:r,className:n},a)}},6396:function(e,a,r){r.d(a,{Z:function(){return u}});var t=r(7462),n=r(7294),o=r(2389),i=r(9443);var p=function(){var e=(0,n.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=r(9521),s=r(6010),c="tabItem_vU9c";function m(e){var a,r,t,o=e.lazy,i=e.block,m=e.defaultValue,u=e.values,d=e.groupId,f=e.className,v=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=u?u:v.map((function(e){var a=e.props;return{value:a.value,label:a.label}})),k=(0,l.lx)(h,(function(e,a){return e.value===a.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var w=null===m?m:null!=(a=null!=m?m:null==(r=v.find((function(e){return e.props.default})))?void 0:r.props.value)?a:null==(t=v[0])?void 0:t.props.value;if(null!==w&&!h.some((function(e){return e.value===w})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=p(),b=N.tabGroupChoices,g=N.setTabGroupChoices,y=(0,n.useState)(w),T=y[0],S=y[1],x=[],O=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var A=b[d];null!=A&&A!==T&&h.some((function(e){return e.value===A}))&&S(A)}var E=function(e){var a=e.currentTarget,r=x.indexOf(a),t=h[r].value;t!==T&&(O(a),S(t),null!=d&&g(d,t))},j=function(e){var a,r=null;switch(e.key){case"ArrowRight":var t=x.indexOf(e.currentTarget)+1;r=x[t]||x[0];break;case"ArrowLeft":var n=x.indexOf(e.currentTarget)-1;r=x[n]||x[x.length-1]}null==(a=r)||a.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":i},f)},h.map((function(e){var a=e.value,r=e.label;return n.createElement("li",{role:"tab",tabIndex:T===a?0:-1,"aria-selected":T===a,className:(0,s.Z)("tabs__item",c,{"tabs__item--active":T===a}),key:a,ref:function(e){return x.push(e)},onKeyDown:j,onFocus:E,onClick:E},null!=r?r:a)}))),o?(0,n.cloneElement)(v.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},v.map((function(e,a){return(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==T})}))))}function u(e){var a=(0,o.Z)();return n.createElement(m,(0,t.Z)({key:String(a)},e))}},9443:function(e,a,r){var t=(0,r(7294).createContext)(void 0);a.Z=t},7016:function(e,a,r){r.r(a),r.d(a,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return m},toc:function(){return u},default:function(){return f}});var t=r(7462),n=r(3366),o=(r(7294),r(3905)),i=r(6396),p=r(8215),l=["components"],s={title:"farrow-api-server",authors:["tqma113"],tags:["Schema","API","Server"],sidebar_position:2},c=void 0,m={unversionedId:"api/schema/farrow-api-server",id:"api/schema/farrow-api-server",isDocsHomePage:!1,title:"farrow-api-server",description:"farrow-api adapter for farrow-http.",source:"@site/docs/api/schema/03-farrow-api-server.mdx",sourceDirName:"api/schema",slug:"/api/schema/farrow-api-server",permalink:"/docs/api/schema/farrow-api-server",editUrl:"https://github.com/farrow-js/docs/docs/api/schema/03-farrow-api-server.mdx",tags:[{label:"Schema",permalink:"/docs/tags/schema"},{label:"API",permalink:"/docs/tags/api"},{label:"Server",permalink:"/docs/tags/server"}],version:"current",sidebarPosition:2,frontMatter:{title:"farrow-api-server",authors:["tqma113"],tags:["Schema","API","Server"],sidebar_position:2},sidebar:"apiSidebar",previous:{title:"farrow-api",permalink:"/docs/api/schema/farrow-api"},next:{title:"farrow-api-client",permalink:"/docs/api/schema/farrow-api-client"}},u=[{value:"Installation",id:"installation",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2},{value:"API",id:"api",children:[{value:"createApiService",id:"createapiservice",children:[],level:3}],level:2},{value:"Learn more",id:"learn-more",children:[],level:2}],d={toc:u};function f(e){var a=e.components,r=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/api/schema/farrow-api"},"farrow-api")," adapter for ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/pipeline/farrow-http"},"farrow-http"),"."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)(i.Z,{groupId:"package-tool",mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install farrow-api-server\n"))),(0,o.kt)(p.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add farrow-api-server\n")))),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/api/schema/farrow-api"},"farrow-api")," just defining API, it's not directly bind to a server."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"farrow-api-server")," can convert an ",(0,o.kt)("inlineCode",{parentName:"p"},"api-entries")," to a router of ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/pipeline/farrow-http"},"farrow-http"),"."),(0,o.kt)("p",null,"In servier-side, we define api/service via ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/schema/farrow-api"},"farrow-api"),", and attach them to ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/pipeline/farrow-http"},"farrow-http"),"."),(0,o.kt)("p",null,"Integrate api:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'// /src/api/todo.ts\nimport { ApiService } from "farrow-api-server";\n\n// assuming addTodo/removeTodo is defined\n\n// combine all api to an object/entries\nexport const entries = {\n  addTodo,\n  removeTodo,\n};\n\n// create service router\nexport const service = ApiService({\n  entries,\n});\n')),(0,o.kt)("p",null,"Attach to ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/pipeline/farrow-http"},"farrow-http"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'// /src/api/index.ts\nimport { Response, Router } from "farrow-http";\n// import todo-service\nimport { service as TodoService } from "./todo";\n\nexport const services = Router();\n\n// capture all json response and do something if needed\nservices.capture("json", (body) => {\n  if (typeof body.value === "object") {\n    return Response.json({\n      ...body.value,\n      // ...others\n    });\n  }\n  return Response.json(body.value);\n});\n\n// attach todo api to services\nservices.route("/api/todo").use(TodoService);\n\n// attach user api to services if existed\n// services.route(\'/api/user\').use(UserService)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import path from "path";\nimport { Http } from "farrow-http";\nimport { vite } from "farrow-vite";\n\nimport { services } from "./api";\n\nlet http = Http();\n\n// attach services to http\nhttp.use(services);\n\nhttp.listen(3000, () => {\n  console.log("server started at http://localhost:3002");\n});\n')),(0,o.kt)("p",null,"In client-side, for consuming data we need to use ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/schema/farrow-api-client"},"farrow-api-client"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'// import file codegened by farrow\nimport { api as TodoApi } from "../api/todo";\n\nconst main = async () => {\n  // invoke api\n  let result = await TodoApi.addTodo({\n    content: "todo content",\n  });\n};\n')),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("h3",{id:"createapiservice"},"createApiService"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type Signature:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const createApiService: (options: CreateApiServiceOptions) => ApiServiceType;\ntype CreateApiServiceOptions = {\n  entries: ApiEntries;\n  errorStack?: boolean;\n  introspection?: boolean;\n};\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example Usage:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { ApiService } from "farrow-api-server";\n\n// combine all api to an object/entries\nexport const entries = {\n  addTodo,\n  removeTodo,\n};\n\nconst service = ApiService({\n  entries,\n});\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Options:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"entries: ApiEntries;")),(0,o.kt)("p",{parentName:"li"},"Api entries.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"errorStack?: boolean;")),(0,o.kt)("p",{parentName:"li"},"Should display ",(0,o.kt)("inlineCode",{parentName:"p"},"error.stack")," or not. It will be true if process.env.NODE_ENV === 'production' by default.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"introspection?: boolean;")),(0,o.kt)("p",{parentName:"li"},"Should open ",(0,o.kt)("a",{parentName:"p",href:"https://graphql.org/learn/introspection/"},"introspection")," feature or not. It will be true if process.env.NODE_ENV === 'production' by default."))),(0,o.kt)("h2",{id:"learn-more"},"Learn more"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Relative Module")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/schema/farrow-schema"},"farrow-schema"),": Powerful and extensible schema builder library. Create Schema like type of ",(0,o.kt)("a",{parentName:"li",href:"https://www.typescriptlang.org/"},"TypeSccript"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/schema/farrow-api"},"farrow-api"),": Schema-based Api builder."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/schema/farrow-api-client"},"farrow-api-client"),": An client for ",(0,o.kt)("a",{parentName:"li",href:"/docs/api/schema/farrow-api-server"},"farrow-api-server"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/schema/farrow-deno-api"},"farrow-deno-api"),": A deno server middleware."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/schema/farrow-federation"},"farrow-federation"),": A aggregation tool for ",(0,o.kt)("a",{parentName:"li",href:"/docs/api/schema/farrow-api"},"farrow-api"),".")))),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Sample")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/06-deno-api"},"farrow-sample/06-deno-api"),": Sample of deno api."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/13-api-federation"},"farrow-sample/13-api-federation"),": Sample for api federation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/14-api-todo-app"},"farrow-sample/14-api-todo-app"),": Todo App with ",(0,o.kt)("strong",{parentName:"li"},"farrow-api"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/23-api-todo"},"farrow-sample/23-api-todo"),": A template for farrow with rpc api.")))))}f.isMDXComponent=!0}}]);