"use strict";(self.webpackChunkfarrow_website=self.webpackChunkfarrow_website||[]).push([[3719],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=l(r),m=a,h=c["".concat(i,".").concat(m)]||c[m]||u[m]||o;return r?n.createElement(h,s(s({ref:t},d),{},{components:r})):n.createElement(h,s({ref:t},d))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[c]="string"==typeof e?e:a,s[1]=p;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3836:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={slug:"/tutorial/http-server",title:"Start with HTTP Server",authors:["tqma113"],tags:["HTTP","Server"],sidebar_position:2},s=void 0,p={unversionedId:"tutorial/http-server",id:"tutorial/http-server",title:"Start with HTTP Server",description:"After creating a server in Getting Started, Farrow also can do more complex thing with another APIs as a HTTP Server.",source:"@site/docs/tutorial/http-server.mdx",sourceDirName:"tutorial",slug:"/tutorial/http-server",permalink:"/docs/tutorial/http-server",draft:!1,editUrl:"https://github.com/farrow-js/docs/docs/tutorial/http-server.mdx",tags:[{label:"HTTP",permalink:"/docs/tags/http"},{label:"Server",permalink:"/docs/tags/server"}],version:"current",sidebarPosition:2,frontMatter:{slug:"/tutorial/http-server",title:"Start with HTTP Server",authors:["tqma113"],tags:["HTTP","Server"],sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/tutorial"},next:{title:"Start with RPC Server",permalink:"/docs/tutorial/rpc-server"}},i={},l=[],d={toc:l},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"After creating a server in ",(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial"},"Getting Started"),", Farrow also can do more complex thing with another APIs as a HTTP Server."),(0,a.kt)("p",null,"Farrow middleware is an improvement based on the traditional middleware. Only ",(0,a.kt)("a",{parentName:"p",href:"/docs/guide/http-server#request"},(0,a.kt)("inlineCode",{parentName:"a"},"requestInfo")," object")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"next")," function are in parameters, Response info is represeted by return value, a object created by ",(0,a.kt)("inlineCode",{parentName:"p"},"Response")," object in farrow."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'http.use((requestInfo, next) => {\n  return Response.text("Hello Farrow");\n});\n')),(0,a.kt)("p",null,"And the ",(0,a.kt)("a",{parentName:"p",href:"/docs/guide/http-server#request"},(0,a.kt)("inlineCode",{parentName:"a"},"requestInfo")," object")," is not ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/dist/latest-v16.x/docs/api/http.html#class-httpincomingmessage"},"Node.js http.IncomingMessage"),", but only contains the raw information extracted from ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/dist/latest-v16.x/docs/api/http.html#class-httpincomingmessage"},"Node.js http.IncomingMessage"),"."),(0,a.kt)("p",null,"So it can be used like this."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"http.use(({ pathname }, next) => {\n  return Response.text(`Hello Farrow with path: ${pathname}`);\n});\n")),(0,a.kt)("p",null,"As you saw, the response information is set by returning ",(0,a.kt)("a",{parentName:"p",href:"/docs/guide/http-server#response"},(0,a.kt)("inlineCode",{parentName:"a"},"Response")," object"),". In addition to set the response body with ",(0,a.kt)("inlineCode",{parentName:"p"},"text"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"json"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"file"),"... alse can set the body with another format."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'http.use(({ pathname }, next) => {\n  return Response.json({\n    message: "Hello Farrow",\n    pathname,\n  });\n});\n')),(0,a.kt)("p",null,"And the status and headers, cookies of response alse can be set with ",(0,a.kt)("a",{parentName:"p",href:"/docs/guide/http-server#response"},(0,a.kt)("inlineCode",{parentName:"a"},"Response")," object"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"")),(0,a.kt)("p",null,"Farrow also has ",(0,a.kt)("strong",{parentName:"p"},"Routing")," system, In addition to add middleware by ",(0,a.kt)("inlineCode",{parentName:"p"},"http.use"),", Farrow also support use ",(0,a.kt)("inlineCode",{parentName:"p"},"http.METHOD()")," to constraint the service the particular endpoint by ",(0,a.kt)("inlineCode",{parentName:"p"},"METHOD")," function, ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," of URL and ",(0,a.kt)("a",{parentName:"p",href:"/docs/guide/schema/validation-type"},"Schema of Content"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'http\n  // constraint to `post` method, `/addTodo` path and with body like { content: string }\n  .post("/addTodo", { body: { content: String } })\n  .use(({ body: { content } }) => {\n    // ...\n\n    return Response.json({\n      code: 1,\n      message: "success",\n    });\n  });\n')),(0,a.kt)("p",null,"If you do not you to constraint the ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods"},"method"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"http.match")," is the better choice."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'http\n  .match({ pathname: "/addTodo", body: { content: String } })\n  .use(({ body: { content } }) => {\n    // ...\n\n    return Response.json({\n      code: 1,\n      message: "success",\n    });\n  });\n')),(0,a.kt)("p",null,"Farrow has provided the ",(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/http-server#todo"},(0,a.kt)("inlineCode",{parentName:"a"},"Router"))," to support grouping api handling."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { Http, Router, Response } from "farrow-http";\n\nconst todo = Router();\n\ntodo.get("/list").use(/** */);\ntodo.post("/add").use(/** */);\ntodo.put("/clear").use(/** */);\n\nconst http = Http();\n\nhttp.route("/todo").use(todo);\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If you want to know more detail about Farrow HTTP Server, see ",(0,a.kt)("a",{parentName:"p",href:"/docs/guide/http-server#request"},"HTTP Server"),"."),(0,a.kt)("p",{parentName:"admonition"},"If you want to know the design philosophy about Farrow HTTP Server, see ",(0,a.kt)("a",{parentName:"p",href:"/docs/design/middleware-mode"},"Why new middleware mode")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/design/schema-builder"},"Why Schema Builder Based on TypeScript"),".")),(0,a.kt)("p",null,"Using ",(0,a.kt)("strong",{parentName:"p"},"Farrow")," in other HTTP Server is very easy. In Express, you can add Farrow app by adapter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const http = Http();\n\nhttp\n  .match({\n    pathname: "/test",\n  })\n  .use((data) => {\n    return Response.text(JSON.stringify(data));\n  });\n\nconst app = express();\n\napp.use("/farrow", adapter(http));\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"For now, Farrow has support Express, Koa. See more at ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/http/farrow-express"},"farrow-express"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/http/farrow-koa"},"farrow-koa"),".")))}u.isMDXComponent=!0}}]);