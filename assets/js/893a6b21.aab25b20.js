"use strict";(self.webpackChunkfarrow_website=self.webpackChunkfarrow_website||[]).push([[7555],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),i=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},m=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=i(n),c=r,k=d["".concat(l,".").concat(c)]||d[c]||u[c]||s;return n?a.createElement(k,p(p({ref:t},m),{},{components:n})):a.createElement(k,p({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,p=new Array(s);p[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var i=2;i<s;i++)p[i]=n[i];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return d}});var a=n(7462),r=n(7294),s=n(2389),p=n(9443);var o=function(){var e=(0,r.useContext)(p.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(9521),i=n(6010),m="tabItem_vU9c";function u(e){var t,n,a,s=e.lazy,p=e.block,u=e.defaultValue,d=e.values,c=e.groupId,k=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=d?d:h.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),N=(0,l.lx)(g,(function(e,t){return e.value===t.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var f=null===u?u:null!=(t=null!=u?u:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=h[0])?void 0:a.props.value;if(null!==f&&!g.some((function(e){return e.value===f})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=o(),v=y.tabGroupChoices,b=y.setTabGroupChoices,R=(0,r.useState)(f),w=R[0],C=R[1],x=[],S=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=c){var T=v[c];null!=T&&T!==w&&g.some((function(e){return e.value===T}))&&C(T)}var q=function(e){var t=e.currentTarget,n=x.indexOf(t),a=g[n].value;a!==w&&(S(t),C(a),null!=c&&b(c,a))},E=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=x.indexOf(e.currentTarget)+1;n=x[a]||x[0];break;case"ArrowLeft":var r=x.indexOf(e.currentTarget)-1;n=x[r]||x[x.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":p},k)},g.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,i.Z)("tabs__item",m,{"tabs__item--active":w===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:E,onFocus:q,onClick:q},null!=n?n:t)}))),s?(0,r.cloneElement)(h.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function d(e){var t=(0,s.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},9443:function(e,t,n){var a=(0,n(7294).createContext)(void 0);t.Z=a},7586:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return m},default:function(){return k},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return d}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),p=n(6396),o=n(8215),l=["components"],i={title:"farrow-http",authors:["tqma113"],tags:["HTTP","Pipeline","Server"],sidebar_position:0},m=void 0,u={unversionedId:"api/http/farrow-http",id:"api/http/farrow-http",isDocsHomePage:!1,title:"farrow-http",description:"A Type-Friendly Web Framework.",source:"@site/docs/api/http/01-farrow-http.mdx",sourceDirName:"api/http",slug:"/api/http/farrow-http",permalink:"/docs/api/http/farrow-http",editUrl:"https://github.com/farrow-js/docs/docs/api/http/01-farrow-http.mdx",tags:[{label:"HTTP",permalink:"/docs/tags/http"},{label:"Pipeline",permalink:"/docs/tags/pipeline"},{label:"Server",permalink:"/docs/tags/server"}],version:"current",sidebarPosition:0,frontMatter:{title:"farrow-http",authors:["tqma113"],tags:["HTTP","Pipeline","Server"],sidebar_position:0},sidebar:"apiSidebar",previous:{title:"farrow-module",permalink:"/docs/api/general/farrow-module"},next:{title:"farrow-cors",permalink:"/docs/api/http/farrow-cors"}},d=[{value:"Installation",id:"installation",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2},{value:"API",id:"api",children:[{value:"Router",id:"router",children:[{value:"<code>router.match</code>",id:"routermatch",children:[{value:"Dynamic parameter",id:"dynamic-parameter",children:[],level:5},{value:"Static parameter",id:"static-parameter",children:[],level:5},{value:"Current supported types in <code>router-url-schema</code>",id:"current-supported-types-in-router-url-schema",children:[],level:5}],level:4},{value:"RESTful Method",id:"restful-method",children:[],level:4},{value:"<code>router.capture</code>",id:"routercapture",children:[],level:4},{value:"<code>router.route</code>",id:"routerroute",children:[],level:4},{value:"<code>router.serve</code>",id:"routerserve",children:[],level:4}],level:3},{value:"Response",id:"response",children:[{value:"<code>Response.info</code>",id:"responseinfo",children:[],level:4},{value:"<code>Response.merge</code>",id:"responsemerge",children:[],level:4},{value:"<code>Response.is</code>",id:"responseis",children:[],level:4},{value:"<code>Response.string</code>",id:"responsestring",children:[],level:4},{value:"<code>Response.json</code>",id:"responsejson",children:[],level:4},{value:"<code>Response.html</code>",id:"responsehtml",children:[],level:4},{value:"<code>Response.text</code>",id:"responsetext",children:[],level:4},{value:"<code>Response.redirect</code>",id:"responseredirect",children:[],level:4},{value:"<code>Response.stream</code>",id:"responsestream",children:[],level:4},{value:"<code>Response.file</code>",id:"responsefile",children:[],level:4},{value:"<code>Response.vary</code>",id:"responsevary",children:[],level:4},{value:"<code>Response.cookie</code>",id:"responsecookie",children:[],level:4},{value:"<code>Response.cookies</code>",id:"responsecookies",children:[],level:4},{value:"<code>Response.header</code>",id:"responseheader",children:[],level:4},{value:"<code>Response.headers</code>",id:"responseheaders",children:[],level:4},{value:"<code>Response.status</code>",id:"responsestatus",children:[],level:4},{value:"<code>Response.buffer</code>",id:"responsebuffer",children:[],level:4},{value:"<code>Response.empty</code>",id:"responseempty",children:[],level:4},{value:"<code>Response.attachment</code>",id:"responseattachment",children:[],level:4},{value:"<code>Response.custom</code>",id:"responsecustom",children:[],level:4},{value:"<code>Response.type</code>",id:"responsetype",children:[],level:4}],level:3},{value:"Http",id:"http",children:[{value:"<code>http.handle</code>",id:"httphandle",children:[],level:4},{value:"<code>http.listen</code>",id:"httplisten",children:[],level:4},{value:"<code>http.server</code>",id:"httpserver",children:[],level:4}],level:3},{value:"Https",id:"https",children:[],level:3},{value:"hooks",id:"hooks",children:[{value:"useReq",id:"usereq",children:[],level:4},{value:"useRes",id:"useres",children:[],level:4},{value:"useRequestInfo",id:"userequestinfo",children:[],level:4},{value:"useBasenames",id:"usebasenames",children:[],level:4}],level:3},{value:"usePrefix",id:"useprefix",children:[],level:3}],level:2},{value:"Learn more",id:"learn-more",children:[],level:2}],c={toc:d};function k(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"A Type-Friendly Web Framework."),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)(p.Z,{groupId:"package-tool",mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install farrow-http\n"))),(0,s.kt)(o.Z,{value:"yarn",label:"Yarn",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add farrow-http\n")))),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import { Http, Response } from "farrow-http";\n\nconst http = Http();\n\n// add http middleware\nhttp.use(() => {\n  // returning response in middleware\n  return Response.text(`Hello Farrow`);\n});\n\nhttp.listen(3000);\n')),(0,s.kt)("h2",{id:"api"},"API"),(0,s.kt)("h3",{id:"router"},"Router"),(0,s.kt)("p",null,"Router factory for ",(0,s.kt)("inlineCode",{parentName:"p"},"farrow-http"),". It extends from ",(0,s.kt)("inlineCode",{parentName:"p"},"Pipeline")," in ",(0,s.kt)("a",{parentName:"p",href:"/docs/api/general/farrow-pipeline"},"farrow-pipeline"),". So there are all api in ",(0,s.kt)("inlineCode",{parentName:"p"},"Pipeline"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"type RouterPipeline = Pipeline<RequestInfo, MaybeAsyncResponse> & {\n  capture: <T extends keyof BodyMap>(\n    type: T,\n    callback: (body: BodyMap[T]) => MaybeAsyncResponse\n  ) => void;\n  route: (name: string) => Pipeline<RequestInfo, MaybeAsyncResponse>;\n  serve: (name: string, dirname: string) => void;\n  match: <T extends RouterRequestSchema>(\n    schema: T,\n    options?: MatchOptions\n  ) => Pipeline<TypeOfRequestSchema<T>, MaybeAsyncResponse>;\n};\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { Router } from 'farrow-http`\n\nconst router = Router()\n")),(0,s.kt)("h4",{id:"routermatch"},(0,s.kt)("inlineCode",{parentName:"h4"},"router.match")),(0,s.kt)("p",null,"Match specific request via router-request-schema and return a schema-pipeline which can handle the matched request info."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"match: <T extends RouterRequestSchema>(\n    schema: T,\n    options?: MatchOptions,\n  ) => Pipeline<TypeOfRequestSchema<T>, MaybeAsyncResponse>\n}\n\ntype RouterRequestSchema = {\n  // match pathname of req via https://github.com/pillarjs/path-to-regexp\n  pathname: Pathname\n  // match method of req.method, default is GET, supports multiple methods as array\n  method?: string | string[]\n  // match the params parsed by path-to-regexp\n  params?: RouterSchemaDescriptor\n  // match the req query\n  query?: RouterSchemaDescriptor\n  // match the req body\n  body?: Schema.FieldDescriptor | Schema.FieldDescriptors\n  // match the req headers\n  headers?: RouterSchemaDescriptor\n  // match the req cookies\n  cookies?: RouterSchemaDescriptor\n}\n\ntype MatchOptions = {\n  // if true, it will throw error when there are no middlewares handle the request, or it will calling next()\n  block?: boolean\n  // if given, it will be called when Router-Request-Schema was failed, if it returned Response in sync or async way, that would be the final response of middleware\n  onSchemaError?(error: ValidationError): Response | void | Promise<Response | void>\n}\n")),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"learn more about Schema Builder from ",(0,s.kt)("a",{parentName:"p",href:"/docs/api/general/farrow-schema"},"farrow-schema"),"."))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'router\n  .match({\n    pathname: "/product/:id",\n    method: "POST",\n    params: {\n      id: Number,\n    },\n    query: {\n      a: Number,\n      b: String,\n      c: Boolean,\n    },\n    body: {\n      a: Number,\n      b: String,\n      c: Boolean,\n    },\n    headers: {\n      a: Number,\n      b: String,\n      c: Boolean,\n    },\n    cookies: {\n      a: Number,\n      b: String,\n      c: Boolean,\n    },\n  })\n  .use(async (request) => {\n    console.log("request", request);\n  });\n')),(0,s.kt)("h5",{id:"dynamic-parameter"},"Dynamic parameter"),(0,s.kt)("p",null,"A dynamic parameter has the form ",(0,s.kt)("inlineCode",{parentName:"p"},"<key:type>"),"."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"If it was placed in ",(0,s.kt)("inlineCode",{parentName:"li"},"pathname"),"(before ",(0,s.kt)("inlineCode",{parentName:"li"},"?")," in a url), it will regard as ",(0,s.kt)("inlineCode",{parentName:"li"},"params[key] = type"),". the order is matter"),(0,s.kt)("li",{parentName:"ul"},"If it was placed in ",(0,s.kt)("inlineCode",{parentName:"li"},"querystring"),"(after ",(0,s.kt)("inlineCode",{parentName:"li"},"?")," in a url), it will regard as ",(0,s.kt)("inlineCode",{parentName:"li"},"query[key] = type"),". the order is't matter")),(0,s.kt)("p",null,"Dynamic parameter support ",(0,s.kt)("inlineCode",{parentName:"p"},"modifier"),"(learn more from ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/pillarjs/path-to-regexp#modifiers"},"here"),"), has the form:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"<key?:type>")," means optional, the corresponding type is ",(0,s.kt)("inlineCode",{parentName:"li"},"{ key?: type }"),", the corresponding pattern is ",(0,s.kt)("inlineCode",{parentName:"li"},"/:key?")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"<key*:type>")," means zero or more, the corresponding type is ",(0,s.kt)("inlineCode",{parentName:"li"},"{ key?: type[] }"),", the corresponding pattern is ",(0,s.kt)("inlineCode",{parentName:"li"},"/:key*")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"<key+:type>")," means one or more, the corresponding type is ",(0,s.kt)("inlineCode",{parentName:"li"},"{ key: type[] }"),", the corresponding pattern is ",(0,s.kt)("inlineCode",{parentName:"li"},"/:key+"))),(0,s.kt)("h5",{id:"static-parameter"},"Static parameter"),(0,s.kt)("p",null,"A static parameter can only be placed in ",(0,s.kt)("inlineCode",{parentName:"p"},"querystring"),", it will regard as ",(0,s.kt)("inlineCode",{parentName:"p"},"literal string type"),"."),(0,s.kt)("p",null,"For example: ",(0,s.kt)("inlineCode",{parentName:"p"},"/?<a:int>&b=2")," has the type ",(0,s.kt)("inlineCode",{parentName:"p"},"{ pathname: string, query: { a: number, b: '2' } }")),(0,s.kt)("h5",{id:"current-supported-types-in-router-url-schema"},"Current supported types in ",(0,s.kt)("inlineCode",{parentName:"h5"},"router-url-schema")),(0,s.kt)("p",null,"The supported types in ",(0,s.kt)("inlineCode",{parentName:"p"},"<key:type>")," are list below:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"string")," -> ts ",(0,s.kt)("inlineCode",{parentName:"li"},"string")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"number")," -> ts ",(0,s.kt)("inlineCode",{parentName:"li"},"number")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"boolean")," -> ts ",(0,s.kt)("inlineCode",{parentName:"li"},"boolean")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"id")," -> ts ",(0,s.kt)("inlineCode",{parentName:"li"},"string"),", but ",(0,s.kt)("inlineCode",{parentName:"li"},"farrow-schema")," will ensure it's not empty"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"int")," -> ts ",(0,s.kt)("inlineCode",{parentName:"li"},"number"),", but ",(0,s.kt)("inlineCode",{parentName:"li"},"farrow-schema")," will ensure it's integer"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"float")," -> ts ",(0,s.kt)("inlineCode",{parentName:"li"},"number")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"{*+}")," -> use the string wrapped by ",(0,s.kt)("inlineCode",{parentName:"li"},"{}")," as ",(0,s.kt)("inlineCode",{parentName:"li"},"string literal type"),". eg. ",(0,s.kt)("inlineCode",{parentName:"li"},"{abc}")," has type ",(0,s.kt)("inlineCode",{parentName:"li"},'"abc"'),", only ",(0,s.kt)("inlineCode",{parentName:"li"},"string literal type")," is supported"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"|")," -> ts ",(0,s.kt)("inlineCode",{parentName:"li"},"union types"),". eg. ",(0,s.kt)("inlineCode",{parentName:"li"},"<a:int|boolean|string>")," has ts type ",(0,s.kt)("inlineCode",{parentName:"li"},"number|boolean|string"))),(0,s.kt)("h4",{id:"restful-method"},"RESTful Method"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"router[get|post|put|patch|head|delte|options]"),", routing methods."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"type RoutingMethod = <U extends string, T extends RouterSharedSchema>(\n  path: U,\n  schema?: T,\n  options?: MatchOptions\n) => Pipeline<\n  MarkReadOnlyDeep<\n    TypeOfUrlSchema<\n      {\n        url: U;\n        method: string;\n      } & (RouterSharedSchema extends T ? {} : T)\n    >\n  >,\n  MaybeAsyncResponse\n>;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'http.get("/get0/<arg0:int>?<arg1:int>").use((request) => {\n  return Response.json({\n    type: "get",\n    request,\n  });\n});\n\n// With Schema\nhttp\n  .post("/get0", {\n    body: {\n      arg0: Int,\n      arg1: Int,\n    },\n  })\n  .use((request) => {\n    return Response.json({\n      type: "post",\n      request,\n    });\n  });\n\n// With options\nhttp\n  .post(\n    "/get0",\n    {\n      body: {\n        arg0: Int,\n        arg1: Int,\n      },\n    },\n    { block: true }\n  )\n  .use((request) => {\n    return Response.json({\n      type: "post",\n      request,\n    });\n  });\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options:")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"block?: boolean")),(0,s.kt)("p",{parentName:"li"},"If block the request and throw Unhandled error when the request does not match any middleware.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"onSchemaError")),(0,s.kt)("p",{parentName:"li"},"Calling when a request does not match the schema."))),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Router-Url-Schema")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Since farrow ",(0,s.kt)("inlineCode",{parentName:"p"},"v1.2.0"),", a new feature ",(0,s.kt)("inlineCode",{parentName:"p"},"router-url-schema")," is supported. it combines ",(0,s.kt)("inlineCode",{parentName:"p"},"{ pathname, params, query }")," into ",(0,s.kt)("inlineCode",{parentName:"p"},"{ url }"),", and use ",(0,s.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/typescript/announcing-typescript-4-1-beta/#template-literal-types"},"Template literal types")," to extract the type info."))),(0,s.kt)("h4",{id:"routercapture"},(0,s.kt)("inlineCode",{parentName:"h4"},"router.capture")),(0,s.kt)("p",null,"Capture the response body if the specific type is matched, should returning response in callback function."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"capture: <T extends keyof BodyMap>(type: T, callback: (body: BodyMap[T]) => MaybeAsyncResponse) => void\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("h4",{id:"routerroute"},(0,s.kt)("inlineCode",{parentName:"h4"},"router.route")),(0,s.kt)("p",null,"Add sub route and return a route-pipeline which can handle the matched request info."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"route: (name: string) => Pipeline<RequestInfo, MaybeAsyncResponse>\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'const foo = Router();\nconst bar = Router();\n\nfoo.route("bar").use(bar);\n')),(0,s.kt)("h4",{id:"routerserve"},(0,s.kt)("inlineCode",{parentName:"h4"},"router.serve")),(0,s.kt)("p",null,"Serve static assets."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"serve: (name: string, dirname: string) => void\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'router.serve("/static", dirname);\n')),(0,s.kt)("h3",{id:"response"},"Response"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Response")," can be used to describe the shape of the real server response, farrow-http will perform it later."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"type ResponseInfo = {\n  status?: Status;\n  headers?: Headers;\n  cookies?: Cookies;\n  body?: Body;\n  vary?: string[];\n};\ntype Response = {\n  info: ResponseInfo;\n  merge: (...responsers: Response[]) => Response;\n  is: (...types: string[]) => string | false;\n  string: ToResponse<typeof string>;\n  json: ToResponse<typeof json>;\n  html: ToResponse<typeof html>;\n  text: ToResponse<typeof text>;\n  redirect: ToResponse<typeof redirect>;\n  stream: ToResponse<typeof stream>;\n  file: ToResponse<typeof file>;\n  vary: ToResponse<typeof vary>;\n  cookie: ToResponse<typeof cookie>;\n  cookies: ToResponse<typeof cookies>;\n  header: ToResponse<typeof header>;\n  headers: ToResponse<typeof headers>;\n  status: ToResponse<typeof status>;\n  buffer: ToResponse<typeof buffer>;\n  empty: ToResponse<typeof empty>;\n  attachment: ToResponse<typeof attachment>;\n  custom: ToResponse<typeof custom>;\n  type: ToResponse<typeof type>;\n};\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"Response.text(`Hello Farrow`);\n\n// Use in http\nhttp.use(() => {\n  // returning response in middleware\n  return Response.text(`Hello Farrow`);\n});\n")),(0,s.kt)("h4",{id:"responseinfo"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.info")),(0,s.kt)("p",null,"Response info."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"info: ResponseInfo;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const headers = Response.info.headers;\n")),(0,s.kt)("h4",{id:"responsemerge"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.merge")),(0,s.kt)("p",null,"Merge all responses."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"merge: (...responses: Response[]) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"")),(0,s.kt)("h4",{id:"responseis"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.is")),(0,s.kt)("p",null,"Check response content type. ",(0,s.kt)("inlineCode",{parentName:"p"},"response.is('json') => 'json' | false"),"."),(0,s.kt)("p",null,"Implement by ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/jshttp/type-is"},"jshttp/type-is"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"is: (...types: string[]) => string | false;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'const response = Response.string("farrow");\n\nresponse.is("string"); // \'string\'\nresponse.is("json"); // false\n')),(0,s.kt)("h4",{id:"responsestring"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.string")),(0,s.kt)("p",null,"Set string response body."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"string: (value: string) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.string("farrow");\n')),(0,s.kt)("h4",{id:"responsejson"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.json")),(0,s.kt)("p",null,"Set json response body."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"json: (value: JsonType) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.json({ name: "farrow" });\n')),(0,s.kt)("h4",{id:"responsehtml"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.html")),(0,s.kt)("p",null,"Set html response body."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"html: (value: string) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.html("<html><head><title>Farrow</title></head></html>");\n')),(0,s.kt)("h4",{id:"responsetext"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.text")),(0,s.kt)("p",null,"Set text response body."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"text: (value: string) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.text("farrow");\n')),(0,s.kt)("h4",{id:"responseredirect"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.redirect")),(0,s.kt)("p",null,"Redirect response."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"redirect: (url: string, options?: { usePrefix?: boolean }) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.redirect("/toFoo");\n\n// With options\n// input url is `/basename/tofoo`, will redirect to `/basename/tobar`\nResponse.redirect("/tobar", { usePrefix: true });\n')),(0,s.kt)("p",null,"Options"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"usePrefix?: boolean"),"\nIf rediect with the prefix of url of current request")),(0,s.kt)("h4",{id:"responsestream"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.stream")),(0,s.kt)("p",null,"Set stream response body."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"stream: (stream: Stream) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import { Writable } from "stream";\n\nconst myStream = new Writable();\n\nResponse.stream(myStream);\n\nmyStream.write("some data");\n')),(0,s.kt)("h4",{id:"responsefile"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.file")),(0,s.kt)("p",null,"Set file response body."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"file: (filename: string) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.file("/pathtofile");\n')),(0,s.kt)("h4",{id:"responsevary"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.vary")),(0,s.kt)("p",null,"Set vary header fields."),(0,s.kt)("p",null,"Implement by ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/jshttp/vary"},"jshttp/vary"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"vary: (...fileds: string[]) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.vary("Origin", "User-Agent");\n')),(0,s.kt)("h4",{id:"responsecookie"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.cookie")),(0,s.kt)("p",null,"Set response cookie."),(0,s.kt)("p",null,"Implement by ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/pillarjs/cookies"},"pillarjs/cookies"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"cookie: (\n  name: string,\n  value: string | number | null,\n  options?: Cookies.SetOption\n) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.cookie("sessionid", "pimyqmcka_f4e");\n')),(0,s.kt)("h4",{id:"responsecookies"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.cookies")),(0,s.kt)("p",null,"Set response cookies."),(0,s.kt)("p",null,"Implement by ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/pillarjs/cookies"},"pillarjs/cookies"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"cookies: (\n  cookies: { [key: string]: string | number | null },\n  options?: Cookies.SetOption\n) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.cookie({ sessionid: "pimyqmcka_f4e" });\n')),(0,s.kt)("h4",{id:"responseheader"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.header")),(0,s.kt)("p",null,"Set response header."),(0,s.kt)("p",null,"Implement by ",(0,s.kt)("inlineCode",{parentName:"p"},"[res.setHeader](https://nodejs.org/dist/latest-v17.x/docs/api/http.html#responsesetheadername-value)"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"header: (name: string, value: Value) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.header("Content-Type", "text/html");\n')),(0,s.kt)("h4",{id:"responseheaders"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.headers")),(0,s.kt)("p",null,"Set response headers."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"headers: (headers: Headers) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.header({ "Content-Type", "text/html" });\n')),(0,s.kt)("h4",{id:"responsestatus"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.status")),(0,s.kt)("p",null,"Set response status."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"status: (code: number, message?: string) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.header(200);\nResponse.header(404, "Not found");\n')),(0,s.kt)("h4",{id:"responsebuffer"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.buffer")),(0,s.kt)("p",null,"Set buffer response body."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://nodejs.org/api/buffer.html"},"Buffer")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"buffer: (buffer: Buffer) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import { Buffer } from "buffer";\n\nconst buffer = Buffer.from([1, 2, 3]);\n\nResponse.buffer(buffer);\n')),(0,s.kt)("h4",{id:"responseempty"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.empty")),(0,s.kt)("p",null,"Set empty content response body."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"empty: () => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"Response.empty();\n")),(0,s.kt)("h4",{id:"responseattachment"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.attachment")),(0,s.kt)("p",null,"Set attachment response header. It is different from ",(0,s.kt)("a",{parentName:"p",href:"#responsefile"},(0,s.kt)("inlineCode",{parentName:"a"},"Response.file")),"."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition"},"Content-Disposition")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"attachment: (filename?: string) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.file("/attachment");\n')),(0,s.kt)("h4",{id:"responsecustom"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.custom")),(0,s.kt)("p",null,"Do nothing when reture this response object but you did in custom handler."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"custom: (handler?: CustomBodyHandler) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.custom(({ res }) => {\n  res.end("farrow");\n});\n')),(0,s.kt)("h4",{id:"responsetype"},(0,s.kt)("inlineCode",{parentName:"h4"},"Response.type")),(0,s.kt)("p",null,"Set content-type via mime-type/extname."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"type: (type: string) => Response;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'Response.type("json");\n')),(0,s.kt)("h3",{id:"http"},"Http"),(0,s.kt)("p",null,"Create a http server."),(0,s.kt)("p",null,"It extends from ",(0,s.kt)("inlineCode",{parentName:"p"},"Router"),". So there are all api in ",(0,s.kt)("inlineCode",{parentName:"p"},"[Router](#router)"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'createHttpPipeline: (options?: HttpPipelineOptions | undefined) => HttpPipeline;\n\ntype HttpPipeline = RouterPipeline & {\n  handle: (req: IncomingMessage, res: ServerResponse) => Promise<void>;\n  listen: (...args: Parameters<Server["listen"]>) => Server;\n  server: () => Server;\n};\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import { Http, Response } from "farrow-http";\n\nconst http = Http();\n\n// add http middleware\nhttp.use(() => {\n  // returning response in middleware\n  return Response.text(`Hello Farrow`);\n});\n\nhttp.listen(3000);\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"type HttpPipelineOptions = {\n  //\n  basenames?: string[];\n  // options for parsing req body, learn more: https://github.com/cojs/co-body#options\n  body?: BodyOptions;\n  // options for parsing req cookies, learn more: https://github.com/jshttp/cookie#options\n  cookie?: CookieOptions;\n  // options for parsing req query, learn more: https://github.com/ljharb/qs\n  query?: QueryOptions;\n  // injecting contexts per request\n  contexts?: (params: {\n    req: IncomingMessage;\n    requestInfo: RequestInfo;\n    basename: string;\n  }) => ContextStorage | Promise<ContextStorage>;\n  // enable log or not\n  logger?: boolean | HttpLoggerOptions;\n};\n\ntype LoggerOptions = {\n  // handle logger result string\n  transporter?: (str: string) => void;\n};\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"basenames?: string[]")),(0,s.kt)("p",{parentName:"li"},"Basename list, farrow-http will cut the basename from request.pathname")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"body?: BodyOptions")),(0,s.kt)("p",{parentName:"li"},"Options for parsing req body, learn more: ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/cojs/co-body#options"},"https://github.com/cojs/co-body#options"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"cookie?: CookieOptions")),(0,s.kt)("p",{parentName:"li"},"Options for parsing req cookies, learn more: ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/jshttp/cookie#options"},"https://github.com/jshttp/cookie#options"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"query?: QueryOptions")),(0,s.kt)("p",{parentName:"li"},"options for parsing req query, learn more: ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ljharb/qs"},"https://github.com/ljharb/qs"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"contexts?: (params: { req: IncomingMessage, requestInfo: RequestInfo, basename: string}) => ContextStorage | Promise<ContextStorage>")),(0,s.kt)("p",{parentName:"li"},"Injecting contexts per request.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"logger?: boolean | HttpLoggerOptions")),(0,s.kt)("p",{parentName:"li"},"Enable log or not"))),(0,s.kt)("h4",{id:"httphandle"},(0,s.kt)("inlineCode",{parentName:"h4"},"http.handle")),(0,s.kt)("p",null,"Handle request and respond to user, you can use this function to make farrow-http work in expressjs/koajs or other web framework in Node.js."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"handle: (req: IncomingMessage, res: ServerResponse) => Promise<void>\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import { createServer } from "http";\nimport { Http } from "farrow-http";\nconst http = Http();\n\nconst server = createServer(http.handle);\n')),(0,s.kt)("h4",{id:"httplisten"},(0,s.kt)("inlineCode",{parentName:"h4"},"http.listen")),(0,s.kt)("p",null,"The same args of ",(0,s.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http.html#serverlisten"},(0,s.kt)("inlineCode",{parentName:"a"},"http.createServer().listen(...)")),", create a server and listen to port."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'listen: (...args: Parameters<Server["listen"]>) => Server;\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'http.listen(3000, () => {\n  console.log("Server started at 3000.");\n});\n')),(0,s.kt)("h4",{id:"httpserver"},(0,s.kt)("inlineCode",{parentName:"h4"},"http.server")),(0,s.kt)("p",null,"Just create a server with http.handle(req, res), don't listen to any port."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"server: () => Server;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const server = http.server();\n")),(0,s.kt)("h3",{id:"https"},"Https"),(0,s.kt)("p",null,"Create a https server."),(0,s.kt)("p",null,"It extends from ",(0,s.kt)("inlineCode",{parentName:"p"},"Http"),". So there are all api in ",(0,s.kt)("inlineCode",{parentName:"p"},"[Http](#http)"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"Https: (options?: HttpsPipelineOptions | undefined) => HttpsPipeline;\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import { Https, Response } from "farrow-http";\n\nconst CERT = fs.readFileSync(path.join(__dirname, "./keys/https-cert.pem"));\nconst KEY = fs.readFileSync(path.join(__dirname, "./keys/https-key.pem"));\nconst CA = fs.readFileSync(path.join(__dirname, "keys/https-csr.pem"));\n\nconst https = Https({\n  tls: {\n    cert: CERT,\n    ca: CA,\n    key: KEY,\n  },\n});\n\n// add http middleware\nhttps.use(() => {\n  // returning response in middleware\n  return Response.text(`Hello Farrow`);\n});\n\nhttps.listen(3000);\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"type HttpsPipelineOptions = HttpPipelineOptions & {\n  tls?: HttpsOptions;\n};\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"tls?: ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Lucifier129/farrow/blob/6c0208e0f9e3e3015042caf4f001717750800602/packages/farrow-http/src/https.ts#L22"},"HttpsOptions")),(0,s.kt)("p",{parentName:"li"},"Intersection between options from ",(0,s.kt)("a",{parentName:"p",href:"https://nodejs.org/dist/latest-v15.x/docs/api/tls.html#tls_tls_createserver_options_secureconnectionlistener"},"tls.createServer()")," and ",(0,s.kt)("a",{parentName:"p",href:"https://nodejs.org/dist/latest-v15.x/docs/api/tls.html#tls_tls_createsecurecontext_options"},"tls.createSecureContext()")," in ",(0,s.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node.js"),"."))),(0,s.kt)("h3",{id:"hooks"},"hooks"),(0,s.kt)("h4",{id:"usereq"},"useReq"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"useReq(): IncomingMessage\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"http.use(() => {\n  // original request\n  let req = useReq();\n});\n")),(0,s.kt)("h4",{id:"useres"},"useRes"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"useRes(): ServerResponse\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"http.use(() => {\n  // original response\n  let res = useRes();\n});\n")),(0,s.kt)("h4",{id:"userequestinfo"},"useRequestInfo"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"useRequestInfo(): RequestInfo\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"http.use((request0) => {\n  // request1 in here is equal to request0, but we can calling useRequestInfo in any custom hooks\n  let request1 = useRequestInfo();\n});\n")),(0,s.kt)("h4",{id:"usebasenames"},"useBasenames"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"useBasenames(): string[]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const http = Http({\n  basenames: [\"/base0\"],\n});\nhttp.route(\"/base1\").use(() => {\n  // basenames will be ['/base0', '/base1'] if user accessed /base0/base1\n  let basenames = useBasenames().value;\n  return Response.json({ basenames });\n});\n")),(0,s.kt)("h3",{id:"useprefix"},"usePrefix"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type Signature:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"usePrefix(): string\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example Usage:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'const http = Http({\n  basenames: ["/base0"],\n});\n\nhttp.route("/base1").use(() => {\n  // prefix will be \'/base0/base1\' if user accessed /base0/base1\n  let prefix = usePrefix();\n  return Response.json({ prefix });\n});\n')),(0,s.kt)("h2",{id:"learn-more"},"Learn more"),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Relative Module")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("ul",{parentName:"div"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/api/general/farrow-pipeline"},"farrow-pipeline"),": Type-Friendly middleware library."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/api/http/farrow-cors"},"farrow-cors"),": Cross-Origin Resource Sharing(CORS) for ",(0,s.kt)("strong",{parentName:"li"},"farrow-http"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/api/http/farrow-express"},"farrow-express"),": Adapter for ",(0,s.kt)("inlineCode",{parentName:"li"},"farrow-http")," in ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/expressjs/express"},"Express")," app."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/api/http/farrow-koa"},"farrow-koa"),": Adapter for ",(0,s.kt)("inlineCode",{parentName:"li"},"farrow-http")," in ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/koajs/koa"},"Koa"))," app."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/api/http/farrow-react"},"farrow-react"),": React adapter for ",(0,s.kt)("strong",{parentName:"li"},"farrow-http"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/api/frontend/farrow-vite"},"farrow-vite"),": Vite adapter for ",(0,s.kt)("strong",{parentName:"li"},"farrow-http"),".")))),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Sample")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("ul",{parentName:"div"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/05-http-todo-app"},"farrow-sample/05-http-todo-app")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/15-http-base"},"farrow-sample/15-http-base")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/16-http-path-base-schema"},"farrow-sample/16-http-path-base-schema")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/17-http-express"},"farrow-sample/17-http-express")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/18-http-koa"},"farrow-sample/18-http-koa")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/tqma113/farrow-sample/tree/main/samples/22-http-todo"},"farrow-sample/22-http-todo"))))))}k.isMDXComponent=!0}}]);